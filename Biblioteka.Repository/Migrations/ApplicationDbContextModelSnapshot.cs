// <auto-generated />
using System;
using Biblioteka.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Biblioteka.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("Biblioteka.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("id");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("author");

                    b.Property<DateTime>("PublishingDate")
                        .HasColumnType("datetime")
                        .HasColumnName("publishing_date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_bookId");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("Biblioteka.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("id");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("CHAR(64)")
                        .HasColumnName("passwordHash");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("CHAR(32)")
                        .HasColumnName("passwordSalt");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_userId");

                    b.HasIndex("PasswordSalt")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("User");
                });
#pragma warning restore 612, 618
        }
    }
}
